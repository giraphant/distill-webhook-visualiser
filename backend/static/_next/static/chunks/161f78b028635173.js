(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,9818,t=>{"use strict";t.s(["Card",()=>n,"CardContent",()=>c,"CardDescription",()=>i,"CardHeader",()=>r,"CardTitle",()=>a]);var e=t.i(48277),o=t.i(99738);function n(t){let{className:n,...r}=t;return(0,e.jsx)("div",{"data-slot":"card",className:(0,o.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",n),...r})}function r(t){let{className:n,...r}=t;return(0,e.jsx)("div",{"data-slot":"card-header",className:(0,o.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",n),...r})}function a(t){let{className:n,...r}=t;return(0,e.jsx)("div",{"data-slot":"card-title",className:(0,o.cn)("leading-none font-semibold",n),...r})}function i(t){let{className:n,...r}=t;return(0,e.jsx)("div",{"data-slot":"card-description",className:(0,o.cn)("text-muted-foreground text-sm",n),...r})}function c(t){let{className:n,...r}=t;return(0,e.jsx)("div",{"data-slot":"card-content",className:(0,o.cn)("px-6",n),...r})}},71631,t=>{"use strict";t.s(["createAlertRule",()=>s,"createFundingRateAlert",()=>j,"createMonitor",()=>n,"deleteAlertRule",()=>l,"deleteFundingRateAlert",()=>F,"deleteMonitor",()=>a,"getActiveAlerts",()=>g,"getAlertRules",()=>c,"getDexFundingRates",()=>u,"getDexFundingRatesBySymbol",()=>h,"getFundingRateAlerts",()=>m,"getMonitorHistory",()=>i,"getMonitors",()=>o,"getPushoverConfig",()=>y,"getWebhookData",()=>f,"savePushoverConfig",()=>p,"testPushover",()=>w,"updateAlertRule",()=>d,"updateFundingRateAlert",()=>E,"updateMonitor",()=>r]);let e="/api";async function o(){let t=await fetch("".concat(e,"/monitors"));if(!t.ok)throw Error("Failed to fetch monitors");return t.json()}async function n(t){let o=await fetch("".concat(e,"/monitors"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw Error("Failed to create monitor");return o.json()}async function r(t,o){let n=await fetch("".concat(e,"/monitors/").concat(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!n.ok)throw Error("Failed to update monitor");return n.json()}async function a(t){if(!(await fetch("".concat(e,"/monitors/").concat(t),{method:"DELETE"})).ok)throw Error("Failed to delete monitor")}async function i(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=await fetch("".concat(e,"/monitors/").concat(t,"/history?limit=").concat(o));if(!n.ok)throw Error("Failed to fetch monitor history");return n.json()}async function c(){let t=await fetch("".concat(e,"/alert-rules"));if(!t.ok)throw Error("Failed to fetch alert rules");return t.json()}async function s(t){let o=await fetch("".concat(e,"/alert-rules"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw Error("Failed to create alert rule");return o.json()}async function d(t,o){let n=await fetch("".concat(e,"/alert-rules/").concat(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!n.ok)throw Error("Failed to update alert rule");return n.json()}async function l(t){if(!(await fetch("".concat(e,"/alert-rules/").concat(t),{method:"DELETE"})).ok)throw Error("Failed to delete alert rule")}async function f(){let t=await fetch("".concat(e,"/data"));if(!t.ok)throw Error("Failed to fetch webhook data");return t.json()}async function u(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],o=await fetch("".concat(e,"/dex/funding-rates").concat(t?"?force_refresh=true":""));if(!o.ok)throw Error("Failed to fetch DEX funding rates");return o.json()}async function h(t){let o=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=await fetch("".concat(e,"/dex/funding-rates/").concat(t).concat(o?"?force_refresh=true":""));if(!n.ok)throw Error("Failed to fetch DEX funding rates for symbol");return n.json()}async function g(){let t=await fetch("".concat(e,"/alerts/active"));if(!t.ok)throw Error("Failed to fetch active alerts");return t.json()}async function y(){let t=await fetch("".concat(e,"/pushover/config"));return t.ok?t.json():null}async function p(t){let o=await fetch("".concat(e,"/pushover/config"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw Error("Failed to save Pushover configuration");return o.json()}async function w(t){return(await fetch("".concat(e,"/pushover/test"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok}async function m(){let t=await fetch("".concat(e,"/dex/funding-rate-alerts"));if(!t.ok)throw Error("Failed to fetch funding rate alerts");return t.json()}async function j(t){let o=await fetch("".concat(e,"/dex/funding-rate-alerts"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!o.ok)throw Error("Failed to create funding rate alert");return o.json()}async function E(t,o){let n=await fetch("".concat(e,"/dex/funding-rate-alerts/").concat(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!n.ok)throw Error("Failed to update funding rate alert");return n.json()}async function F(t){if(!(await fetch("".concat(e,"/dex/funding-rate-alerts/").concat(t),{method:"DELETE"})).ok)throw Error("Failed to delete funding rate alert")}}]);